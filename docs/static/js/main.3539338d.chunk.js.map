{"version":3,"sources":["components/data.tsx","components/styled.tsx","components/table/TableHeader.tsx","components/miscellaneous/typography.tsx","components/editingComponents/EditingCells.tsx","components/miscellaneous/Modal.tsx","components/table/TableFooter.tsx","components/editingComponents/EditingRow.tsx","components/miscellaneous/Spinner.tsx","components/table/TableBody.tsx","components/table/Table.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Source","DataType","useStyles","makeStyles","root","width","fontSize","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","subtitle1","paddingBottom","theme","createMuiTheme","palette","primary","main","light","dark","secondary","warning","error","contrastText","typography","h5","textAlign","overrides","MuiInputBase","MuiCheckbox","color","MuiTableFooter","display","MuiTablePagination","borderBottom","MuiDialogContent","paddingLeft","overflowY","MuiDialogTitle","MuiCircularProgress","MuiTableContainer","maxHeight","MuiPaper","StyledTableCell","withStyles","head","backgroundColor","common","white","lineHeight","TableCell","StyledTableRow","TableRow","StyledYellowCell","body","StyledRedCell","StyledFooterCell","StyledTableSortLabel","icon","TableSortLabel","StyledEditButton","Button","StyledFilterButton","alignSelf","marginRight","StyledModalTableRow","flexDirection","TableHeader","props","columns","rows","orderBy","order","setOrder","setOrderBy","checkedAll","checkAll","setSelected","TableHead","Checkbox","inputProps","style","checked","onClick","newSelected","map","n","id","handleSelectAllClick","column","align","type","sortDirection","field","active","direction","label","Cell","flexGrow","TypographySelected","selected","length","TypographyNoFilters","colSpan","Typography","variant","getRows","a","axios","get","response","data","items","item","ID","UPDATE_TIMESTAMP","dateString","Date","slice","getColumns","Object","keys","config","reduce","acc","key","headerName","sortable","_","uniqueId","push","editingMapping","DESCRIPTION","placeholder","inputType","dataType","SOURCE_NM","source","values","CLIENT_NM","TERMINATION_DT","VALUE_3","defaultValue","EditedCell","input","handleChange","clients","setValues","handleDateChange","row","txtClasses","TextField","name","size","onChange","select","SelectProps","native","value","Autocomplete","options","e","newValue","getOptionLabel","option","renderInput","params","utils","DateFnsUtils","ThemeProvider","DatePicker","openTo","views","toString","gutterBottom","className","FilterModal","open","onClose","filterData","useState","filters","setFilters","handleClose","arg","date","month","getMonth","year","getFullYear","newDate","padStart","event","target","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","Table","TableBody","DialogActions","TableFooterC","rowsPerPage","edited","activeFilter","setRowsData","toggleFilter","page","setPage","setRowsPerPage","React","filterModal","openFilterModal","TableFooter","criteria","filter","newData","every","toLowerCase","includes","handleFiltering","disabled","Promise","resolve","then","v","TablePagination","count","onChangeRowsPerPage","newRows","parseInt","onChangePage","pageNum","EditingRow","colsNames","saveData","Spinner","CircularProgress","stableSort","array","sorted","sortBy","obj","reverse","TableBodyC","setEdited","useMemo","col","isItemSelected","indexOf","filtered","handleSelect","toLocaleDateString","toLocaleTimeString","rowData","handleEditing","TableC","TableContainer","component","Paper","stickyHeader","aria-label","App","classes","setColumnsData","useEffect","cols","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3539338d.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport axios from \"axios\";\n\nexport enum Source {\n  UAT = \"UAT\",\n  PROD = \"PROD\",\n  DEV = \"DEV\",\n}\n\nexport enum DataType {\n  STRING = \"STRING\",\n  NUMERIC = \"NUMERIC\",\n  DATE = \"DATE\",\n  TIMESTAMP = \"TIMESTAMP\",\n  LIST = \"LIST\",\n}\n\nexport interface Data {\n  RN: number;\n  IS_ACTIVE: boolean;\n  ID: string;\n  DESCRIPTION: string;\n  SOURCE_ID: number;\n  SOURCE_NM: Source;\n  CLIENT_ID: number;\n  CLIENT_NM: string;\n  ACTIVATION_DT: Date;\n  TERMINATION_DT: Date;\n  VALUE_1: number;\n  VALUE_2: number;\n  VALUE_3: number;\n  UPDATED_BY: string;\n  UPDATE_TIMESTAMP: Date;\n}\n\nexport interface Config {\n  field: string;\n  headerName: string;\n  sortable: boolean;\n  id: number;\n  width: number;\n  label: string;\n  type: DataType;\n}\n\nconst DATA_URL = \"https://run.mocky.io/v3/6f15e3ad-bf04-4940-9b81-0f14fac8ebf2\";\nconst CONFIG_URL =\n  \"https://run.mocky.io/v3/9700b81e-1edd-49b8-8160-736b24a989a7\";\n\nconst formatDate = (dateString: string) => new Date(dateString.slice(0, -7));\n\nexport const getRows = async (): Promise<Data[]> => {\n  const response = await axios.get(DATA_URL);\n  return response.data.items.map((item: any) => ({\n    ...item,\n    id: item.ID,\n    UPDATE_TIMESTAMP: formatDate(item.UPDATE_TIMESTAMP),\n  }));\n};\n\nexport const getColumns = async (): Promise<Config[]> => {\n  const response = await axios.get(CONFIG_URL);\n  return Object.keys(response.data.config).reduce((acc: Array<any>, key) => {\n    const { label } = response.data.config[key];\n    const data = {\n      ...response.data.config[key],\n      field: key,\n      headerName: label,\n      sortable: true,\n      id: _.uniqueId(),\n    };\n    acc.push(data);\n    return acc;\n  }, []);\n};\n","import {\n  withStyles,\n  makeStyles,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    fontSize: \"11px\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  subtitle1: {\n    paddingBottom: \"15px\",\n  },\n}));\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5AA9E6\",\n      light: \"#D8EEFD\",\n      dark: \"#BADCF3\",\n    },\n    secondary: {\n      main: \"#5AA9E6\",\n    },\n    warning: {\n      main: \"#FFE45E\",\n    },\n    error: {\n      main: \"#F50049\",\n      contrastText: \"#FFFFFF\",\n    },\n  },\n  typography: {\n    h5: {\n      textAlign: \"center\",\n      margin: \"30px\",\n    },\n  },\n  overrides: {\n    MuiInputBase: {\n      root: {\n        fontSize: \"14px\",\n      },\n    },\n    MuiCheckbox: {\n      root: {\n        color: \"#5AA9E6\",\n      },\n    },\n    MuiTableFooter: {\n      root: {\n        display: \"block\",\n      },\n    },\n    MuiTablePagination: {\n      root: {\n        borderBottom: \"none\",\n      },\n    },\n    MuiDialogContent: {\n      root: {\n        paddingLeft: \"15px\",\n        overflowY: \"unset\",\n      },\n    },\n    MuiDialogTitle: {\n      root: {\n        padding: \"15px\",\n      },\n    },\n    MuiCircularProgress: {\n      root: {\n        margin: \"0 50%\",\n      },\n    },\n    MuiTableContainer: {\n      root: {\n        maxHeight: \"94vh\",\n      },\n    },\n    MuiPaper: {\n      root: {\n        \"&.MuiDialog-paperScrollPaper\": {\n          padding: \"20px 30px\",\n        },\n      },\n    },\n  },\n});\n\nexport const StyledTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    lineHeight: \"1.3rem\",\n  },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles(() => ({\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n    \"&.Mui-selected, &.Mui-selected:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  },\n}))(TableRow);\n\nexport const StyledYellowCell = withStyles(() => ({\n  body: {\n    backgroundColor: theme.palette.warning.main,\n  },\n}))(TableCell);\n\nexport const StyledRedCell = withStyles(() => ({\n  body: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n  },\n}))(TableCell);\n\nexport const StyledFooterCell = withStyles(() => ({\n  root: {\n    borderBottom: \"none\",\n    padding: \"8px\",\n  },\n}))(TableCell);\n\nexport const StyledTableSortLabel = withStyles(() => ({\n  root: {\n    fontSize: \"14px\",\n    \"&:hover, &:focus\": {\n      color: theme.palette.common.white,\n    },\n    \"&.MuiTableSortLabel-active\": {\n      color: theme.palette.common.white,\n    },\n  },\n  icon: {\n    color: \"inherit !important\",\n  },\n}))(TableSortLabel);\n\nexport const StyledEditButton = withStyles(() => ({\n  root: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.common.white,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n      border: `1px solid ${theme.palette.primary.main}`,\n    },\n  },\n}))(Button);\n\nexport const StyledFilterButton = withStyles(() => ({\n  root: {\n    color: theme.palette.common.white,\n    alignSelf: \"center\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n    marginRight: \"10px\",\n  },\n}))(Button);\n\nexport const StyledModalTableRow = withStyles(() => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}))(TableRow);\n","import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { StyledTableCell, StyledTableSortLabel } from \"../styled\";\n\nconst TableHeader = (props: any) => {\n  const {\n    columns,\n    rows,\n    orderBy,\n    order,\n    setOrder,\n    setOrderBy,\n    checkedAll,\n    checkAll,\n    setSelected,\n  } = props;\n\n  const handleRequestSort = (field: string) => {\n    setOrder(order === \"asc\" ? \"desc\" : \"asc\");\n    setOrderBy(field);\n  };\n\n  const handleSelectAllClick = () => {\n    if (!checkedAll) {\n      const newSelected = rows.map((n: any) => n.id);\n      checkAll(true);\n      setSelected(newSelected);\n    } else {\n      checkAll(false);\n      setSelected([]);\n    }\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            inputProps={{ \"aria-label\": \"select all\" }}\n            style={{ color: \"white\" }}\n            checked={checkedAll}\n            onClick={() => handleSelectAllClick()}\n          />\n        </StyledTableCell>\n        {columns.map((column: any) => (\n          <StyledTableCell\n            key={column.id}\n            id={column.id}\n            align={column.type === \"NUMERIC\" ? \"right\" : \"left\"}\n            width={column.width}\n            sortDirection={orderBy === column.field ? order : false}\n          >\n            <StyledTableSortLabel\n              id={column.id}\n              active={orderBy === column.field}\n              direction={orderBy === column.field ? order : \"asc\"}\n              onClick={() => handleRequestSort(column.field)}\n            >\n              {column.label}\n            </StyledTableSortLabel>\n          </StyledTableCell>\n        ))}\n        <StyledTableCell padding=\"checkbox\" />\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Cell = withStyles(() => ({\n  root: {\n    flexGrow: 1,\n    borderBottom: \"none\",\n  },\n}))(TableCell);\n\nexport const TypographySelected = (props: { selected: any[] }) => {\n  const { selected } = props;\n  return (\n    <Cell align=\"left\">\n      {selected.length\n        ? selected.length === 1\n          ? `1 item selected`\n          : `${selected.length} items selected`\n        : \"\"}\n    </Cell>\n  );\n};\n\nexport const TypographyNoFilters = () => (\n  <TableRow>\n    <TableCell colSpan={13}>\n      <Typography variant=\"h5\">No items matching set filters</Typography>\n    </TableCell>\n  </TableRow>\n);\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { theme, useStyles } from \"../styled\";\nimport { Source } from \"../data\";\n\nconst editingMapping: any = {\n  DESCRIPTION: {\n    placeholder: \"Lorem ipsum\",\n    inputType: \"TEXT\",\n    label: \"Item description:\",\n    dataType: \"text\",\n  },\n  SOURCE_NM: {\n    inputType: \"LIST\",\n    label: \"Source:\",\n    source: Object.values(Source),\n  },\n  CLIENT_NM: {\n    inputType: \"AUTOCOMPLETE\",\n    label: \"Client name:\",\n    placeholder: \"KOG\",\n  },\n  TERMINATION_DT: {\n    inputType: \"DATE\",\n    label: \"Termination date\",\n  },\n  VALUE_3: {\n    placeholder: \"0 - 100000000\",\n    inputType: \"TEXT\",\n    label: \"Max range\",\n    dataType: \"number\",\n  },\n  defaultValue: {\n    placeholder: null,\n    inputType: null,\n    label: null,\n    dataType: null,\n  },\n};\n\nconst EditedCell = (props: any) => {\n  const {\n    field,\n    values,\n    handleChange,\n    clients,\n    setValues,\n    handleDateChange,\n    row,\n    type,\n  } = props;\n  const txtClasses = useStyles();\n  const { inputType, placeholder, label, dataType, source = null } =\n    editingMapping[field] || editingMapping.defaultValue;\n\n  let input;\n  switch (inputType) {\n    case \"TEXT\":\n      input = (\n        <TextField\n          type={dataType}\n          defaultValue={values[field]}\n          name={field}\n          size=\"small\"\n          id=\"input-descr\"\n          style={{ width: \"100%\" }}\n          onChange={handleChange}\n          placeholder={type === \"form\" ? placeholder : \"\"}\n        />\n      );\n      break;\n    case \"LIST\":\n      input = (\n        <TextField\n          id=\"select-source\"\n          select\n          defaultValue={values[field]}\n          name={field}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n        >\n          {(type === \"form\" ? [\"All\", ...source] : source).map(\n            (item: string) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            )\n          )}\n        </TextField>\n      );\n      break;\n    case \"AUTOCOMPLETE\":\n      input = (\n        <Autocomplete\n          id=\"picker\"\n          size=\"small\"\n          options={clients}\n          onChange={(e, newValue) =>\n            setValues({ ...values, [field]: newValue })\n          }\n          defaultValue={values[field]}\n          getOptionLabel={(option: string) => option || \"\"}\n          renderInput={(params) => (\n            <TextField\n              /* eslint-disable react/jsx-props-no-spreading */\n              {...params}\n              variant=\"outlined\"\n              placeholder={type === \"form\" ? placeholder : \"\"}\n            />\n          )}\n        />\n      );\n      break;\n    case \"DATE\":\n      input = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <ThemeProvider theme={theme}>\n            <DatePicker\n              variant=\"inline\"\n              openTo=\"year\"\n              name={field}\n              views={[\"year\", \"month\"]}\n              value={type === \"form\" ? values[field] : new Date(values[field])}\n              onChange={handleDateChange}\n            />\n          </ThemeProvider>\n        </MuiPickersUtilsProvider>\n      );\n      break;\n    default:\n      input = row[field].toString();\n      break;\n  }\n\n  return (\n    <TableCell>\n      {type === \"form\" && (\n        <Typography\n          variant=\"subtitle1\"\n          gutterBottom\n          className={txtClasses.subtitle1}\n        >\n          {label}\n        </Typography>\n      )}\n      {input}\n    </TableCell>\n  );\n};\n\nexport default EditedCell;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport EditingCell from \"../editingComponents/EditingCells\";\nimport { StyledModalTableRow } from \"../styled\";\n\nconst FilterModal = (props: any) => {\n  const row = {\n    DESCRIPTION: \"\",\n    SOURCE_NM: \"\",\n    CLIENT_NM: null,\n    TERMINATION_DT: null,\n    VALUE_3: null,\n  };\n  const { open, onClose, clients, filterData } = props;\n  const [filters, setFilters] = useState(row);\n  const filtersFields = [\n    \"DESCRIPTION\",\n    \"SOURCE_NM\",\n    \"CLIENT_NM\",\n    \"TERMINATION_DT\",\n    \"VALUE_3\",\n  ];\n\n  const handleClose = (arg: string) => {\n    if (arg === \"cancel\") {\n      setFilters(row);\n      onClose();\n    } else {\n      setFilters(row);\n      filterData(filters);\n    }\n  };\n\n  const handleDateChange = (date: Date | null) => {\n    const month = (date!.getMonth() + 1).toString();\n    const year = date?.getFullYear();\n    const newDate = `${year}-${month.padStart(2, \"0\")}`;\n    // @ts-ignore\n    setFilters({ ...filters, TERMINATION_DT: newDate });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    const { name, value } = target;\n    setFilters({ ...filters, [name]: value });\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth\n      maxWidth=\"sm\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Data filters</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Choose fields to filter rows:</DialogContentText>\n      </DialogContent>\n      <Table>\n        <TableBody>\n          <StyledModalTableRow>\n            {filtersFields.map((field: string) => (\n              <EditingCell\n                field={field}\n                values={filters}\n                handleChange={handleChange}\n                clients={clients}\n                setValues={setFilters}\n                handleDateChange={handleDateChange}\n                row={row}\n                type=\"form\"\n                key={field}\n              />\n            ))}\n          </StyledModalTableRow>\n        </TableBody>\n      </Table>\n      <DialogActions>\n        <Button onClick={() => handleClose(\"cancel\")} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={() => handleClose(\"save\")} color=\"primary\">\n          Filter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default FilterModal;\n","import React from \"react\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport Button from \"@material-ui/core/Button\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { TypographySelected } from \"../miscellaneous/typography\";\nimport { StyledFilterButton, StyledFooterCell } from \"../styled\";\nimport FilterModal from \"../miscellaneous/Modal\";\n\nconst TableFooterC = (props: any) => {\n  const {\n    rows,\n    rowsPerPage,\n    selected,\n    edited,\n    activeFilter,\n    getRows,\n    setRowsData,\n    toggleFilter,\n    page,\n    clients,\n    setPage,\n    setRowsPerPage,\n  } = props;\n\n  const [filterModal, openFilterModal] = React.useState<boolean>(false);\n\n  const handleModalOpen = () => {\n    openFilterModal(true);\n  };\n\n  const handleModalClose = () => {\n    openFilterModal(false);\n    toggleFilter(false);\n  };\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement, globalThis.MouseEvent> | null,\n    pageNum: number\n  ) => {\n    setPage(pageNum);\n  };\n\n  const handleChangeRowsPerPage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newRows = e.target.value;\n    setRowsPerPage(parseInt(newRows, 10));\n    setPage(0);\n  };\n\n  const handleFiltering = (filterData: any) => {\n    const criteria = Object.keys(filterData).filter((key) => filterData[key]);\n    const newData = rows.filter((row: any) =>\n      criteria.every((item) =>\n        item === \"DESCRIPTION\"\n          ? row[item].toLowerCase().includes(filterData[item].toLowerCase())\n          : filterData[item] === row[item]\n      )\n    );\n    setRowsData(newData);\n    openFilterModal(false);\n    toggleFilter(true);\n  };\n\n  return (\n    <Table>\n      <TableFooter>\n        <FilterModal\n          clients={clients}\n          open={filterModal}\n          onClose={handleModalClose}\n          filterData={(data: any) => handleFiltering(data)}\n        />\n        <TableRow style={{ display: \"flex\" }}>\n          <TypographySelected selected={selected} />\n          <StyledFooterCell>\n            <StyledFilterButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleModalOpen}\n              disabled={edited !== false}\n            >\n              Filter\n            </StyledFilterButton>\n            {activeFilter && (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={edited !== false}\n                onClick={() =>\n                  Promise.resolve(getRows())\n                    .then((v) => setRowsData(v))\n                    .then(() => toggleFilter(false))\n                }\n              >\n                Clear filters\n              </Button>\n            )}\n          </StyledFooterCell>\n          <TablePagination\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n          />\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n};\n\nexport default TableFooterC;\n","import React, { useState } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { StyledEditButton } from \"../styled\";\n\nimport EditingCell from \"./EditingCells\";\n\nconst EditingRow = (props: any) => {\n  const { row, colsNames, saveData, clients } = props;\n  const [values, setValues] = useState(row);\n\n  const handleDateChange = (date: Date | null) => {\n    const month = (date!.getMonth() + 1).toString();\n    const year = date?.getFullYear();\n    const newDate = `${year}-${month.padStart(2, \"0\")}`;\n    setValues({ ...values, TERMINATION_DT: newDate });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  return (\n    <TableRow key={row.id}>\n      <TableCell key=\"checkbox\" padding=\"checkbox\">\n        <Checkbox disabled />\n      </TableCell>\n      {colsNames.map((field: string) => (\n        <EditingCell\n          field={field}\n          values={values}\n          handleChange={handleChange}\n          clients={clients}\n          setValues={setValues}\n          handleDateChange={handleDateChange}\n          row={row}\n          type=\"table\"\n          key={field}\n        />\n      ))}\n      <TableCell key={row.id} padding=\"checkbox\">\n        <StyledEditButton\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => saveData(values)}\n        >\n          Save\n        </StyledEditButton>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default EditingRow;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst Spinner = () => (\n  <TableRow>\n    <TableCell colSpan={13}>\n      <CircularProgress size={50} />\n    </TableCell>\n  </TableRow>\n);\n\nexport default Spinner;\n","import React, { useMemo } from \"react\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport _ from \"lodash\";\nimport {\n  StyledTableRow,\n  StyledRedCell,\n  StyledYellowCell,\n  StyledEditButton,\n} from \"../styled\";\nimport EditingRow from \"../editingComponents/EditingRow\";\nimport { TypographyNoFilters } from \"../miscellaneous/typography\";\nimport Spinner from \"../miscellaneous/Spinner\";\n\nconst stableSort = (array: any[], orderBy: string, order: string): any[] => {\n  // @ts-ignore\n  const sorted = _.sortBy(array, (obj) =>\n    typeof obj[orderBy] === \"string\" ? obj[orderBy].toLowerCase() : obj[orderBy]\n  );\n  return order === \"asc\" ? sorted : sorted.reverse();\n};\n\nconst TableBodyC = (props: any) => {\n  const {\n    rows,\n    orderBy,\n    order,\n    page,\n    rowsPerPage,\n    edited,\n    setSelected,\n    selected,\n    columns,\n    setEdited,\n    setRowsData,\n    clients,\n    activeFilter,\n  } = props;\n\n  const colsNames = useMemo(\n    () => columns.map((col: any) => ({ field: col.field, type: col.type })),\n    [columns]\n  );\n\n  const handleSelect = (id: string) => {\n    if (selected.includes(id)) {\n      const filtered = selected.filter((item: string) => item !== id);\n      setSelected(filtered);\n    } else {\n      setSelected([...selected, id]);\n    }\n  };\n\n  const handleEditing = (rowData: any) => {\n    const newData = rows.map((row: any) => {\n      if (row.id === edited) {\n        return Object.keys(rowData).reduce((acc: any, key) => {\n          acc[key] = rowData[key] ? rowData[key] : row[key];\n          return acc;\n        }, {});\n      }\n      return row;\n    });\n    setRowsData(newData);\n    setEdited(false);\n  };\n\n  return (\n    <TableBody>\n      {rows.length ? (\n        stableSort(rows, orderBy, order)\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((row) => {\n            const isItemSelected = selected.indexOf(row.id) !== -1;\n            return edited !== row.id ? (\n              <StyledTableRow\n                key={row.id}\n                selected={selected.indexOf(row.id) !== -1}\n              >\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={isItemSelected}\n                    onClick={() => handleSelect(row.id)}\n                  />\n                </TableCell>\n                {(colsNames as Array<{ field: string; type: string }>).map(\n                  ({ field, type }) => {\n                    if (field === \"VALUE_1\" && row[field] > 2000) {\n                      return row[field] < 3000 ? (\n                        <StyledYellowCell key={_.uniqueId()} align=\"right\">\n                          {row[field]}\n                        </StyledYellowCell>\n                      ) : (\n                        <StyledRedCell key={_.uniqueId()} align=\"right\">\n                          {row[field]}\n                        </StyledRedCell>\n                      );\n                    }\n                    if (field === \"UPDATE_TIMESTAMP\") {\n                      /* temporary fix */\n                      return (\n                        <TableCell key={_.uniqueId()}>\n                          {row[field].toLocaleDateString()}{\" \"}\n                          {row[field].toLocaleTimeString()}\n                        </TableCell>\n                      );\n                    }\n                    return (\n                      <TableCell\n                        key={_.uniqueId()}\n                        align={type === \"NUMERIC\" ? \"right\" : \"left\"}\n                      >\n                        {row[field]}\n                      </TableCell>\n                    );\n                  }\n                )}\n                <TableCell key={row.id} padding=\"checkbox\">\n                  <StyledEditButton\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => setEdited(row.id)}\n                    disabled={edited !== false && edited !== row.id}\n                  >\n                    Edit\n                  </StyledEditButton>\n                </TableCell>\n              </StyledTableRow>\n            ) : (\n              <EditingRow\n                row={row}\n                colsNames={colsNames}\n                saveData={(data: any) => handleEditing(data)}\n                clients={clients}\n                key={row.id}\n              />\n            );\n          })\n      ) : activeFilter ? (\n        <TypographyNoFilters />\n      ) : (\n        <Spinner />\n      )}\n    </TableBody>\n  );\n};\n\nexport default TableBodyC;\n","import React, { useMemo } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHeader from \"./TableHeader\";\nimport TableFooter from \"./TableFooter\";\nimport TableBody from \"./TableBody\";\nimport { getRows, Data } from \"../data\";\n\nlet Order: \"asc\" | \"desc\";\nconst TableC = (props: any) => {\n  const { rows, columns, setRowsData } = props;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(10);\n  const [order, setOrder] = React.useState<typeof Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"RN\");\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [checkedAll, checkAll] = React.useState<boolean>(false);\n  const [edited, setEdited] = React.useState<string | false>(false);\n  const [activeFilter, toggleFilter] = React.useState<boolean>(false);\n\n  const clients = useMemo(\n    () => (rows as Data[]).map((row: Data) => row.CLIENT_NM),\n    [rows]\n  );\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table stickyHeader aria-label=\"simple table\" size=\"small\">\n          <TableHeader\n            columns={columns}\n            rows={rows}\n            order={order}\n            orderBy={orderBy}\n            checkAll={checkAll}\n            checkedAll={checkedAll}\n            setOrder={setOrder}\n            setOrderBy={setOrderBy}\n            setSelected={setSelected}\n          />\n          <TableBody\n            rows={rows}\n            orderBy={orderBy}\n            order={order}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            edited={edited}\n            selected={selected}\n            setEdited={setEdited}\n            columns={columns}\n            setRowsData={setRowsData}\n            clients={clients}\n            activeFilter={activeFilter}\n            setSelected={setSelected}\n          />\n        </Table>\n      </TableContainer>\n      <TableFooter\n        rows={rows}\n        rowsPerPage={rowsPerPage}\n        selected={selected}\n        edited={edited}\n        activeFilter={activeFilter}\n        getRows={getRows}\n        setRowsData={setRowsData}\n        toggleFilter={toggleFilter}\n        setRowsPerPage={setRowsPerPage}\n        page={page}\n        setPage={setPage}\n        clients={clients}\n      />\n    </>\n  );\n};\n\nexport default TableC;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"./table/Table\";\nimport { getRows, getColumns, Data, Config } from \"./data\";\nimport { useStyles } from \"./styled\";\n\nconst App = () => {\n  const classes = useStyles();\n  const [rows, setRowsData] = useState<Data[] | []>([]);\n  const [columns, setColumnsData] = useState<Config[] | []>([]);\n\n  useEffect(() => {\n    (async () => {\n      const cols = await getColumns();\n      setColumnsData(cols);\n      const rowData = await getRows();\n      setRowsData(rowData);\n    })();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Table rows={rows} columns={columns} setRowsData={setRowsData} />\n      </Paper>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./components/styled\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}