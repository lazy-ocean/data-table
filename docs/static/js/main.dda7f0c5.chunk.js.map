{"version":3,"sources":["components/data.tsx","components/styled.tsx","components/table/TableHeader.tsx","components/miscellaneous/typography.tsx","components/utils.tsx","components/editingComponents/EditingCells.tsx","components/miscellaneous/Modal.tsx","components/miscellaneous/FiltersCell.tsx","components/table/TableFooter.tsx","components/editingComponents/EditingRow.tsx","components/miscellaneous/Spinner.tsx","components/table/ConditionalCell.tsx","components/table/TableBody.tsx","components/table/Table.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Source","DataType","useStyles","makeStyles","root","width","fontSize","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","subtitle1","paddingBottom","theme","createMuiTheme","palette","primary","main","light","dark","secondary","warning","error","contrastText","typography","h3","textAlign","overrides","MuiInputBase","MuiCheckbox","color","MuiTableFooter","display","MuiTablePagination","borderBottom","MuiDialogContent","paddingLeft","overflowY","MuiDialogTitle","MuiCircularProgress","MuiTableContainer","maxHeight","MuiPaper","MuiChip","marginLeft","StyledTableCell","withStyles","head","backgroundColor","common","white","lineHeight","TableCell","StyledTableRow","TableRow","StyledYellowCell","body","StyledRedCell","StyledFooterCell","StyledTableSortLabel","icon","TableSortLabel","StyledEditButton","Button","StyledFilterButton","alignSelf","marginRight","StyledModalTableRow","flexDirection","TableHeader","props","columns","rows","orderBy","order","setOrder","setOrderBy","checkedAll","checkAll","setSelected","TableHead","Checkbox","inputProps","style","checked","onClick","newSelected","map","n","id","handleSelectAllClick","column","align","type","sortDirection","field","active","direction","label","Cell","TypographySelected","selected","Typography","variant","length","TypographyNoFilters","colSpan","formatDate","dateString","date","Date","slice","toLocaleDateString","toLocaleTimeString","getRows","a","axios","get","response","data","items","item","ID","UPDATE_TIMESTAMP","getColumns","Object","keys","config","reduce","acc","key","headerName","sortable","_","uniqueId","push","conditionalCellsUtils","VALUE_1","danger","filtersFieldsUtils","editingMapping","DESCRIPTION","placeholder","inputType","dataType","SOURCE_NM","source","values","CLIENT_NM","TERMINATION_DT","VALUE_3","defaultValue","EditedCell","input","displayType","handleChange","clients","setValues","handleDateChange","row","view","txtClasses","TextField","name","size","onChange","select","SelectProps","native","value","Autocomplete","options","e","newValue","getOptionLabel","option","renderInput","params","utils","DateFnsUtils","ThemeProvider","DatePicker","openTo","views","toString","gutterBottom","className","FilterModal","open","onClose","filterData","filters","setFilters","handleClose","arg","month","getMonth","year","getFullYear","newDate","padStart","event","target","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","Table","TableBody","DialogActions","StyledCell","alignItems","flexGrow","FiltersCell","activeFilters","filter","Chip","filterRow","TableFooterC","rowsPerPage","edited","activeFilter","setRowsData","toggleFilter","page","setPage","setRowsPerPage","React","useState","filterModal","openFilterModal","TableFooter","criteria","newData","every","toLowerCase","includes","disabled","Promise","resolve","then","v","TablePagination","count","onChangeRowsPerPage","newRows","parseInt","onChangePage","pageNum","EditingRow","columnsInfo","saveData","Spinner","CircularProgress","ConditionalCell","stableSort","array","sorted","sortBy","obj","reverse","TableBodyC","setEdited","useMemo","col","indexOf","filtered","handleSelect","rowData","handleEditing","TableC","TableContainer","component","Paper","stickyHeader","aria-label","App","classes","setColumnsData","useEffect","cols","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dda7f0c5.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport axios from \"axios\";\n\nexport enum Source {\n  UAT = \"UAT\",\n  PROD = \"PROD\",\n  DEV = \"DEV\",\n}\n\nexport enum DataType {\n  STRING = \"STRING\",\n  NUMERIC = \"NUMERIC\",\n  DATE = \"DATE\",\n  TIMESTAMP = \"TIMESTAMP\",\n  LIST = \"LIST\",\n}\n\nexport interface Data {\n  RN: number;\n  IS_ACTIVE: boolean;\n  ID: string;\n  DESCRIPTION: string;\n  SOURCE_ID: number;\n  SOURCE_NM: Source;\n  CLIENT_ID: number;\n  CLIENT_NM: string;\n  ACTIVATION_DT: Date;\n  TERMINATION_DT: Date;\n  VALUE_1: number;\n  VALUE_2: number;\n  VALUE_3: number;\n  UPDATED_BY: string;\n  UPDATE_TIMESTAMP: string;\n}\n\nexport interface Config {\n  field: string;\n  headerName: string;\n  sortable: boolean;\n  id: number;\n  width: number;\n  label: string;\n  type: DataType;\n}\n\nconst DATA_URL = \"https://run.mocky.io/v3/6f15e3ad-bf04-4940-9b81-0f14fac8ebf2\";\nconst CONFIG_URL =\n  \"https://run.mocky.io/v3/9700b81e-1edd-49b8-8160-736b24a989a7\";\n\nconst formatDate = (dateString: string) => {\n  const date = new Date(dateString.slice(0, -7));\n  return `${date.toLocaleDateString()} \n        ${date.toLocaleTimeString()}`;\n};\n\nexport const getRows = async (): Promise<Data[]> => {\n  const response = await axios.get(DATA_URL);\n  return response.data.items.map((item: any) => ({\n    ...item,\n    id: item.ID,\n    UPDATE_TIMESTAMP: formatDate(item.UPDATE_TIMESTAMP),\n  }));\n};\n\nexport const getColumns = async (): Promise<Config[]> => {\n  const response = await axios.get(CONFIG_URL);\n  return Object.keys(response.data.config).reduce((acc: Array<any>, key) => {\n    const { label } = response.data.config[key];\n    const data = {\n      ...response.data.config[key],\n      field: key,\n      headerName: label,\n      sortable: true,\n      id: _.uniqueId(),\n    };\n    acc.push(data);\n    return acc;\n  }, []);\n};\n","import {\n  withStyles,\n  makeStyles,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    fontSize: \"11px\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  subtitle1: {\n    paddingBottom: \"15px\",\n  },\n}));\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#5AA9E6\",\n      light: \"#D8EEFD\",\n      dark: \"#BADCF3\",\n    },\n    secondary: {\n      main: \"#5AA9E6\",\n    },\n    warning: {\n      main: \"#FFE45E\",\n    },\n    error: {\n      main: \"#F50049\",\n      contrastText: \"#FFFFFF\",\n    },\n  },\n  typography: {\n    h3: {\n      textAlign: \"center\",\n      margin: \"30px\",\n      fontSize: \"20px\",\n    },\n  },\n  overrides: {\n    MuiInputBase: {\n      root: {\n        fontSize: \"14px\",\n      },\n    },\n    MuiCheckbox: {\n      root: {\n        color: \"#5AA9E6\",\n      },\n    },\n    MuiTableFooter: {\n      root: {\n        display: \"block\",\n      },\n    },\n    MuiTablePagination: {\n      root: {\n        borderBottom: \"none\",\n      },\n    },\n    MuiDialogContent: {\n      root: {\n        paddingLeft: \"15px\",\n        overflowY: \"unset\",\n      },\n    },\n    MuiDialogTitle: {\n      root: {\n        padding: \"15px\",\n      },\n    },\n    MuiCircularProgress: {\n      root: {\n        margin: \"0 50%\",\n      },\n    },\n    MuiTableContainer: {\n      root: {\n        maxHeight: \"94vh\",\n      },\n    },\n    MuiPaper: {\n      root: {\n        \"&.MuiDialog-paperScrollPaper\": {\n          padding: \"20px 30px\",\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        marginLeft: \"10px\",\n      },\n    },\n  },\n});\n\nexport const StyledTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    lineHeight: \"1.3rem\",\n  },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles(() => ({\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n    \"&.Mui-selected, &.Mui-selected:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  },\n}))(TableRow);\n\nexport const StyledYellowCell = withStyles(() => ({\n  body: {\n    backgroundColor: theme.palette.warning.main,\n  },\n}))(TableCell);\n\nexport const StyledRedCell = withStyles(() => ({\n  body: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n  },\n}))(TableCell);\n\nexport const StyledFooterCell = withStyles(() => ({\n  root: {\n    borderBottom: \"none\",\n    marginLeft: \"auto\",\n  },\n}))(TableCell);\n\nexport const StyledTableSortLabel = withStyles(() => ({\n  root: {\n    fontSize: \"14px\",\n    \"&:hover, &:focus\": {\n      color: theme.palette.common.white,\n    },\n    \"&.MuiTableSortLabel-active\": {\n      color: theme.palette.common.white,\n    },\n  },\n  icon: {\n    color: \"inherit !important\",\n  },\n}))(TableSortLabel);\n\nexport const StyledEditButton = withStyles(() => ({\n  root: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.common.white,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n      border: `1px solid ${theme.palette.primary.main}`,\n    },\n  },\n}))(Button);\n\nexport const StyledFilterButton = withStyles(() => ({\n  root: {\n    color: theme.palette.common.white,\n    alignSelf: \"center\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n    marginRight: \"10px\",\n  },\n}))(Button);\n\nexport const StyledModalTableRow = withStyles(() => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}))(TableRow);\n","import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { StyledTableCell, StyledTableSortLabel } from \"../styled\";\n\nconst TableHeader = (props: any) => {\n  const {\n    columns,\n    rows,\n    orderBy,\n    order,\n    setOrder,\n    setOrderBy,\n    checkedAll,\n    checkAll,\n    setSelected,\n  } = props;\n\n  const handleRequestSort = (field: string) => {\n    setOrder(order === \"asc\" ? \"desc\" : \"asc\");\n    setOrderBy(field);\n  };\n\n  const handleSelectAllClick = () => {\n    if (!checkedAll) {\n      const newSelected = rows.map((n: any) => n.id);\n      checkAll(true);\n      setSelected(newSelected);\n    } else {\n      checkAll(false);\n      setSelected([]);\n    }\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            inputProps={{ \"aria-label\": \"select all\" }}\n            style={{ color: \"white\" }}\n            checked={checkedAll}\n            onClick={() => handleSelectAllClick()}\n          />\n        </StyledTableCell>\n        {columns.map((column: any) => (\n          <StyledTableCell\n            key={column.id}\n            id={column.id}\n            align={column.type === \"NUMERIC\" ? \"right\" : \"left\"}\n            width={column.width}\n            sortDirection={orderBy === column.field ? order : false}\n          >\n            <StyledTableSortLabel\n              id={column.id}\n              active={orderBy === column.field}\n              direction={orderBy === column.field ? order : \"asc\"}\n              onClick={() => handleRequestSort(column.field)}\n            >\n              {column.label}\n            </StyledTableSortLabel>\n          </StyledTableCell>\n        ))}\n        <StyledTableCell padding=\"checkbox\" />\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Cell = withStyles(() => ({\n  root: {\n    borderBottom: \"none\",\n  },\n}))(TableCell);\n\nexport const TypographySelected = (props: { selected: any[] }) => {\n  const { selected } = props;\n  return (\n    <Cell align=\"left\">\n      <Typography variant=\"subtitle1\">\n        {selected.length\n          ? selected.length === 1\n            ? `1 item selected`\n            : `${selected.length} items selected`\n          : \"\"}\n      </Typography>\n    </Cell>\n  );\n};\n\nexport const TypographyNoFilters = () => (\n  <TableRow>\n    <TableCell colSpan={13}>\n      <Typography variant=\"h3\">No items matching set filters</Typography>\n    </TableCell>\n  </TableRow>\n);\n","import { Source } from \"./data\";\n\n// ADD COLUMN NAME AND TWO CRITERIA FOR CELLS TO BE PAINTED IN RED (DANGER) AND YELLOW (WARNING)\nexport const conditionalCellsUtils: any = {\n  VALUE_1: {\n    danger: 3000,\n    warning: 2000,\n  },\n};\n\n// ADD COLUMN NAMES TO ADD FILTER FOR IT\nexport const filtersFieldsUtils = [\n  \"DESCRIPTION\",\n  \"SOURCE_NM\",\n  \"CLIENT_NM\",\n  \"TERMINATION_DT\",\n  \"VALUE_3\",\n];\n\n// ADD COLUMN NAME AND DATA FOR INPUT TO BE USED IN EDITING AND FILTERING\nexport const editingMapping: any = {\n  DESCRIPTION: {\n    placeholder: \"Lorem ipsum\",\n    inputType: \"TEXT\",\n    label: \"Item description:\",\n    dataType: \"text\",\n  },\n  SOURCE_NM: {\n    inputType: \"LIST\",\n    label: \"Source:\",\n    source: Object.values(Source),\n  },\n  CLIENT_NM: {\n    inputType: \"AUTOCOMPLETE\",\n    label: \"Client name:\",\n    placeholder: \"KOG\",\n  },\n  TERMINATION_DT: {\n    inputType: \"DATE\",\n    label: \"Termination date:\",\n  },\n  VALUE_3: {\n    placeholder: \"0 - 100000000\",\n    inputType: \"TEXT\",\n    label: \"Max range:\",\n    dataType: \"number\",\n  },\n  defaultValue: {\n    placeholder: null,\n    inputType: null,\n    label: null,\n    dataType: null,\n  },\n};\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { theme, useStyles } from \"../styled\";\nimport { editingMapping } from \"../utils\";\n\nconst EditedCell = (props: any) => {\n  const {\n    field,\n    displayType,\n    values,\n    handleChange,\n    clients,\n    setValues,\n    handleDateChange,\n    row,\n    view,\n  } = props;\n  const txtClasses = useStyles();\n  const { inputType, placeholder, label, dataType, source = null } =\n    editingMapping[field] || editingMapping.defaultValue;\n\n  let input;\n  switch (inputType) {\n    case \"TEXT\":\n      input = (\n        <TextField\n          type={dataType}\n          defaultValue={values[field]}\n          name={field}\n          size=\"small\"\n          id=\"input-descr\"\n          style={{ width: \"100%\" }}\n          onChange={handleChange}\n          placeholder={view === \"form\" ? placeholder : \"\"}\n        />\n      );\n      break;\n    case \"LIST\":\n      input = (\n        <TextField\n          id=\"select-source\"\n          select\n          defaultValue={values[field]}\n          name={field}\n          onChange={handleChange}\n          SelectProps={{\n            native: true,\n          }}\n        >\n          {(view === \"form\" ? [\"All\", ...source] : source).map(\n            (item: string) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            )\n          )}\n        </TextField>\n      );\n      break;\n    case \"AUTOCOMPLETE\":\n      input = (\n        <Autocomplete\n          id=\"picker\"\n          size=\"small\"\n          options={clients}\n          onChange={(e, newValue) =>\n            setValues({ ...values, [field]: newValue })\n          }\n          defaultValue={values[field]}\n          getOptionLabel={(option: string) => option || \"\"}\n          renderInput={(params) => (\n            <TextField\n              /* eslint-disable react/jsx-props-no-spreading */\n              {...params}\n              variant=\"outlined\"\n              placeholder={view === \"form\" ? placeholder : \"\"}\n            />\n          )}\n        />\n      );\n      break;\n    case \"DATE\":\n      input = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <ThemeProvider theme={theme}>\n            <DatePicker\n              variant=\"inline\"\n              openTo=\"year\"\n              name={field}\n              views={[\"year\", \"month\"]}\n              value={view === \"form\" ? values[field] : new Date(values[field])}\n              onChange={handleDateChange}\n            />\n          </ThemeProvider>\n        </MuiPickersUtilsProvider>\n      );\n      break;\n    default:\n      input = row[field].toString();\n      break;\n  }\n  return (\n    <TableCell align={displayType === \"NUMERIC\" ? \"right\" : \"left\"}>\n      {view === \"form\" && (\n        <Typography\n          variant=\"subtitle1\"\n          gutterBottom\n          className={txtClasses.subtitle1}\n        >\n          {label}\n        </Typography>\n      )}\n      {input}\n    </TableCell>\n  );\n};\n\nexport default EditedCell;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport EditingCell from \"../editingComponents/EditingCells\";\nimport { StyledModalTableRow } from \"../styled\";\nimport { filtersFieldsUtils } from \"../utils\";\n\nconst FilterModal = (props: any) => {\n  const {\n    open,\n    onClose,\n    clients,\n    filterData,\n    filters,\n    setFilters,\n    row,\n  } = props;\n\n  const handleClose = (arg: string) => {\n    if (arg === \"cancel\") {\n      onClose();\n    } else {\n      filterData();\n    }\n  };\n\n  const handleDateChange = (date: Date | null) => {\n    const month = (date!.getMonth() + 1).toString();\n    const year = date?.getFullYear();\n    const newDate = `${year}-${month.padStart(2, \"0\")}`;\n    // @ts-ignore\n    setFilters({ ...filters, TERMINATION_DT: newDate });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    const { name, value } = target;\n    setFilters({ ...filters, [name]: value });\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth\n      maxWidth=\"sm\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Data filters</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Choose fields to filter rows:</DialogContentText>\n      </DialogContent>\n      <Table>\n        <TableBody>\n          <StyledModalTableRow>\n            {filtersFieldsUtils.map((field: string) => (\n              <EditingCell\n                field={field}\n                values={filters}\n                handleChange={handleChange}\n                clients={clients}\n                setValues={setFilters}\n                handleDateChange={handleDateChange}\n                row={row}\n                view=\"form\"\n                key={field}\n              />\n            ))}\n          </StyledModalTableRow>\n        </TableBody>\n      </Table>\n      <DialogActions>\n        <Button onClick={() => handleClose(\"cancel\")} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => handleClose(\"save\")}\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Filter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default FilterModal;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { editingMapping } from \"../utils\";\n\nconst StyledCell = withStyles(() => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"none\",\n    flexGrow: 1,\n  },\n}))(TableCell);\n\nconst FiltersCell = (props: any) => {\n  const { filters } = props;\n  const activeFilters = Object.keys(\n    filters as {\n      DESCRIPTION: string;\n      SOURCE_NM: string;\n      CLIENT_NM: string | null;\n      TERMINATION_DT: string | null;\n      VALUE_3: string | null;\n    }\n  ).filter((filter) => filters[filter]);\n  return (\n    <StyledCell>\n      <Typography variant=\"subtitle1\">Active filters:</Typography>\n      {activeFilters.map((filter) => (\n        <Chip\n          label={`${editingMapping[filter].label} ${filters[filter]}`}\n          variant=\"outlined\"\n          key={`chip-${editingMapping[filter].label}`}\n          color=\"primary\"\n        />\n      ))}\n    </StyledCell>\n  );\n};\n\nexport default FiltersCell;\n","import React from \"react\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport Button from \"@material-ui/core/Button\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { TypographySelected } from \"../miscellaneous/typography\";\nimport { StyledFilterButton, StyledFooterCell } from \"../styled\";\nimport FilterModal from \"../miscellaneous/Modal\";\nimport FiltersCell from \"../miscellaneous/FiltersCell\";\n\nconst filterRow = {\n  DESCRIPTION: null,\n  SOURCE_NM: null,\n  CLIENT_NM: null,\n  TERMINATION_DT: null,\n  VALUE_3: null,\n};\n\nconst TableFooterC = (props: any) => {\n  const {\n    rows,\n    rowsPerPage,\n    selected,\n    edited,\n    activeFilter,\n    getRows,\n    setRowsData,\n    toggleFilter,\n    page,\n    clients,\n    setPage,\n    setRowsPerPage,\n  } = props;\n\n  const [filterModal, openFilterModal] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<any>(filterRow);\n\n  const handleModalOpen = () => {\n    openFilterModal(true);\n  };\n\n  const handleModalClose = () => {\n    openFilterModal(false);\n  };\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    pageNum: number\n  ) => {\n    setPage(pageNum);\n  };\n\n  const handleChangeRowsPerPage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newRows = e.target.value;\n    setRowsPerPage(parseInt(newRows, 10));\n    setPage(0);\n  };\n\n  const handleFiltering = () => {\n    const criteria = Object.keys(filters).filter((key) => filters[key]);\n    const newData = rows.filter((row: any) =>\n      criteria.every((item) =>\n        item === \"DESCRIPTION\"\n          ? row[item].toLowerCase().includes(filters[item].toLowerCase())\n          : filters[item] === row[item]\n      )\n    );\n    setRowsData(newData);\n    openFilterModal(false);\n    toggleFilter(true);\n  };\n  return (\n    <Table>\n      <TableFooter>\n        <FilterModal\n          clients={clients}\n          open={filterModal}\n          filters={filters}\n          setFilters={setFilters}\n          onClose={handleModalClose}\n          filterData={handleFiltering}\n        />\n        <TableRow style={{ display: \"flex\", alignItems: \"center\" }}>\n          {selected.length > 0 && <TypographySelected selected={selected} />}\n          {activeFilter && <FiltersCell filters={filters} />}\n          <StyledFooterCell>\n            <StyledFilterButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleModalOpen}\n              disabled={edited !== false}\n            >\n              Filter\n            </StyledFilterButton>\n            {activeFilter && (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={edited !== false}\n                onClick={() =>\n                  Promise.resolve(getRows())\n                    .then((v) => setRowsData(v))\n                    .then(() => toggleFilter(false))\n                    .then(() => setFilters(filterRow))\n                }\n              >\n                Clear filters\n              </Button>\n            )}\n          </StyledFooterCell>\n          <TablePagination\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n          />\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n};\n\nexport default TableFooterC;\n","import React, { useState } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { StyledEditButton } from \"../styled\";\n\nimport EditingCell from \"./EditingCells\";\n\nconst EditingRow = (props: any) => {\n  const { row, columnsInfo, saveData, clients } = props;\n  const [values, setValues] = useState(row);\n\n  const handleDateChange = (date: Date | null) => {\n    const month = (date!.getMonth() + 1).toString();\n    const year = date?.getFullYear();\n    const newDate = `${year}-${month.padStart(2, \"0\")}`;\n    setValues({ ...values, TERMINATION_DT: newDate });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  return (\n    <TableRow key={row.id}>\n      <TableCell key=\"checkbox\" padding=\"checkbox\">\n        <Checkbox disabled />\n      </TableCell>\n      {(columnsInfo as Array<{ field: string; type: string }>).map(\n        ({ field, type }) => (\n          <EditingCell\n            field={field}\n            displayType={type}\n            values={values}\n            handleChange={handleChange}\n            clients={clients}\n            setValues={setValues}\n            handleDateChange={handleDateChange}\n            row={row}\n            view=\"table\"\n            key={field}\n          />\n        )\n      )}\n      <TableCell key={row.id} padding=\"checkbox\">\n        <StyledEditButton\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => saveData(values)}\n        >\n          Save\n        </StyledEditButton>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default EditingRow;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst Spinner = () => (\n  <TableRow>\n    <TableCell colSpan={13}>\n      <CircularProgress size={50} />\n    </TableCell>\n  </TableRow>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { StyledRedCell, StyledYellowCell } from \"../styled\";\nimport { conditionalCellsUtils } from \"../utils\";\n\nconst ConditionalCell = (props: any) => {\n  const { value, id, field } = props;\n  const { warning, danger } = conditionalCellsUtils[field];\n  return value > danger ? (\n    <StyledRedCell key={`${field}-${id}`} align=\"right\">\n      {value}\n    </StyledRedCell>\n  ) : value > warning ? (\n    <StyledYellowCell key={`${field}-${id}`} align=\"right\">\n      {value}\n    </StyledYellowCell>\n  ) : (\n    <TableCell key={`${field}-${id}`} align=\"right\">\n      {value}\n    </TableCell>\n  );\n};\n\nexport default ConditionalCell;\n","import React, { useMemo } from \"react\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport _ from \"lodash\";\nimport { StyledTableRow, StyledEditButton } from \"../styled\";\nimport EditingRow from \"../editingComponents/EditingRow\";\nimport { TypographyNoFilters } from \"../miscellaneous/typography\";\nimport Spinner from \"../miscellaneous/Spinner\";\nimport ConditionalCell from \"./ConditionalCell\";\nimport { conditionalCellsUtils } from \"../utils\";\n\nconst stableSort = (array: any[], orderBy: string, order: string): any[] => {\n  // @ts-ignore\n  const sorted = _.sortBy(array, (obj) =>\n    typeof obj[orderBy] === \"string\" ? obj[orderBy].toLowerCase() : obj[orderBy]\n  );\n  return order === \"asc\" ? sorted : sorted.reverse();\n};\n\nconst TableBodyC = (props: any) => {\n  const {\n    rows,\n    orderBy,\n    order,\n    page,\n    rowsPerPage,\n    edited,\n    setSelected,\n    selected,\n    columns,\n    setEdited,\n    setRowsData,\n    clients,\n    activeFilter,\n  } = props;\n\n  const columnsInfo = useMemo(\n    () => columns.map((col: any) => ({ field: col.field, type: col.type })),\n    [columns]\n  );\n\n  const handleSelect = (id: string) => {\n    if (selected.includes(id)) {\n      const filtered = selected.filter((item: string) => item !== id);\n      setSelected(filtered);\n    } else {\n      setSelected([...selected, id]);\n    }\n  };\n\n  const handleEditing = (rowData: any) => {\n    const newData = rows.map((row: any) => {\n      if (row.id === edited) {\n        return Object.keys(rowData).reduce((acc: any, key) => {\n          acc[key] = rowData[key] ? rowData[key] : row[key];\n          return acc;\n        }, {});\n      }\n      return row;\n    });\n    setRowsData(newData);\n    setEdited(false);\n  };\n\n  return (\n    <TableBody>\n      {rows.length ? (\n        stableSort(rows, orderBy, order)\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((row) =>\n            edited !== row.id ? (\n              <StyledTableRow\n                key={row.id}\n                selected={selected.indexOf(row.id) !== -1}\n              >\n                <TableCell padding=\"checkbox\" key={`checkbox-${row.id}`}>\n                  <Checkbox\n                    checked={selected.indexOf(row.id) !== -1}\n                    onClick={() => handleSelect(row.id)}\n                  />\n                </TableCell>\n                {(columnsInfo as Array<{ field: string; type: string }>).map(\n                  ({ field, type }) =>\n                    Object.keys(conditionalCellsUtils).includes(field) ? (\n                      <ConditionalCell\n                        value={row[field]}\n                        id={row.id}\n                        field={field}\n                      />\n                    ) : (\n                      <TableCell\n                        key={`${field}-${row.id}`}\n                        align={type === \"NUMERIC\" ? \"right\" : \"left\"}\n                      >\n                        {row[field]}\n                      </TableCell>\n                    )\n                )}\n                <TableCell key={`edit-${row.id}`} padding=\"checkbox\">\n                  <StyledEditButton\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => setEdited(row.id)}\n                    disabled={edited !== false && edited !== row.id}\n                  >\n                    Edit\n                  </StyledEditButton>\n                </TableCell>\n              </StyledTableRow>\n            ) : (\n              <EditingRow\n                row={row}\n                columnsInfo={columnsInfo}\n                saveData={(data: any) => handleEditing(data)}\n                clients={clients}\n                key={row.id}\n              />\n            )\n          )\n      ) : activeFilter ? (\n        <TypographyNoFilters />\n      ) : (\n        <Spinner />\n      )}\n    </TableBody>\n  );\n};\n\nexport default TableBodyC;\n","import React, { useMemo } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHeader from \"./TableHeader\";\nimport TableFooter from \"./TableFooter\";\nimport TableBody from \"./TableBody\";\nimport { getRows, Data } from \"../data\";\n\nlet Order: \"asc\" | \"desc\";\nconst TableC = (props: any) => {\n  const { rows, columns, setRowsData } = props;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(10);\n  const [order, setOrder] = React.useState<typeof Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"RN\");\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [checkedAll, checkAll] = React.useState<boolean>(false);\n  const [edited, setEdited] = React.useState<string | false>(false);\n  const [activeFilter, toggleFilter] = React.useState<boolean>(false);\n\n  const clients = useMemo(\n    () => (rows as Data[]).map((row: Data) => row.CLIENT_NM),\n    [rows]\n  );\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table stickyHeader aria-label=\"simple table\" size=\"small\">\n          <TableHeader\n            columns={columns}\n            rows={rows}\n            order={order}\n            orderBy={orderBy}\n            checkAll={checkAll}\n            checkedAll={checkedAll}\n            setOrder={setOrder}\n            setOrderBy={setOrderBy}\n            setSelected={setSelected}\n          />\n          <TableBody\n            rows={rows}\n            orderBy={orderBy}\n            order={order}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            edited={edited}\n            selected={selected}\n            setEdited={setEdited}\n            columns={columns}\n            setRowsData={setRowsData}\n            clients={clients}\n            activeFilter={activeFilter}\n            setSelected={setSelected}\n          />\n        </Table>\n      </TableContainer>\n      <TableFooter\n        rows={rows}\n        rowsPerPage={rowsPerPage}\n        selected={selected}\n        edited={edited}\n        activeFilter={activeFilter}\n        getRows={getRows}\n        setRowsData={setRowsData}\n        toggleFilter={toggleFilter}\n        setRowsPerPage={setRowsPerPage}\n        page={page}\n        setPage={setPage}\n        clients={clients}\n      />\n    </>\n  );\n};\n\nexport default TableC;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"./table/Table\";\nimport { getRows, getColumns, Data, Config } from \"./data\";\nimport { useStyles } from \"./styled\";\n\nconst App = () => {\n  const classes = useStyles();\n  const [rows, setRowsData] = useState<Data[] | []>([]);\n  const [columns, setColumnsData] = useState<Config[] | []>([]);\n\n  useEffect(() => {\n    (async () => {\n      const cols = await getColumns();\n      setColumnsData(cols);\n      const rowData = await getRows();\n      setRowsData(rowData);\n    })();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Table rows={rows} columns={columns} setRowsData={setRowsData} />\n      </Paper>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./components/styled\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}